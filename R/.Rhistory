library(roxygen2)
document()
library(devtools)
document()
document()
document()
document()
document()
load("/home/jonathan/Documents/fastGeneMIdata/insilico.expr.data.rda")
load("/home/jonathan/Documents/fastGeneMIdata/insilico.gs.net.rda")
library(fastGeneMI)
mim <- get.mim.ML(insilico.expr.data, "equalwidth", 10, 5)
ing.algo <- "clr"
gs.net <- insilico.gs.net
inf.algo.funcs <- list("clr" = minet::clr, "mrnet" = minet::mrnet, "aracne" = minet::aracne)
inf.algo <- inf.algo.funcs[[inf.algo]]
inf.algo <- "clr"
inf.algo <- inf.algo.funcs[[inf.algo]]
network <-inf.algo(mim)
predictions <- network
# Return just the inferred network if no gold standard is provided
if(is.null(gs.net))
return(network)
else # Or evaluate against gold standard if one is provided
{
# Put in checks of dimensions
if(!all(dim(mim)==dim(gs.net)))
stop("mutual information matrix and gold standard must have the same dimensions")
if(!isSymmetric(gs.net))
stop("gold standard must be a symmetric matrix")
n.genes <- nrow(mim)
predictions <- network
# Only evaluate against regulator genes
if(!is.null(n.reg)){
if(length(n.reg)==1) {
if(n.reg > n.genes)
stop("number of regulators must be less than number of genes")
predictions <- predictions[,1:n.reg]
gs.net <- gs.net[,1:n.reg]
}
else {
if(length(n.reg) > n.genes)
stop("number of regulators must be less than the number of genes")
predictions <- predictions[,n.reg]
gs.net <- gs.net[,n.reg]
}
}
else
warning("All genes are designated as potential regulators - this is not recommended.")
# Get predictions and labels, removing NAs from both predictions and gold standard
predictions <- predictions[lower.tri(predictions)]
labels <- gs.net[lower.tri(gs.net)]
not.na.idxs <- which(!is.na(labels), arr.ind=TRUE)
predictions <- predictions[not.na.idxs]
labels <- labels[not.na.idxs]
}
n.reg <- 193
# Return just the inferred network if no gold standard is provided
if(is.null(gs.net))
return(network)
else # Or evaluate against gold standard if one is provided
{
# Put in checks of dimensions
if(!all(dim(mim)==dim(gs.net)))
stop("mutual information matrix and gold standard must have the same dimensions")
if(!isSymmetric(gs.net))
stop("gold standard must be a symmetric matrix")
n.genes <- nrow(mim)
predictions <- network
# Only evaluate against regulator genes
if(!is.null(n.reg)){
if(length(n.reg)==1) {
if(n.reg > n.genes)
stop("number of regulators must be less than number of genes")
predictions <- predictions[,1:n.reg]
gs.net <- gs.net[,1:n.reg]
}
else {
if(length(n.reg) > n.genes)
stop("number of regulators must be less than the number of genes")
predictions <- predictions[,n.reg]
gs.net <- gs.net[,n.reg]
}
}
else
warning("All genes are designated as potential regulators - this is not recommended.")
# Get predictions and labels, removing NAs from both predictions and gold standard
predictions <- predictions[lower.tri(predictions)]
labels <- gs.net[lower.tri(gs.net)]
not.na.idxs <- which(!is.na(labels), arr.ind=TRUE)
predictions <- predictions[not.na.idxs]
labels <- labels[not.na.idxs]
}
eval.out <- precrec::evalmod(scores=predictions, labels=labels)
eval.out
plot.df <- precrec::fortify(eval.out)
plot.df <- fortify(eval.out)
fortify
precrec::fortify
ggplot2::fortify(eval.mod)
ggplot2::fortify(eval.out)
